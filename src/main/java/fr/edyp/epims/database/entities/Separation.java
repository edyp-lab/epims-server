package fr.edyp.epims.database.entities;
// Generated 10 mai 2021 ï¿½ 11:47:01 by Hibernate Tools 5.2.12.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Separation generated by hbm2java
 */
@Entity
@Table(name = "separation", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "result"))
public class Separation implements java.io.Serializable {

	private int id;
	private ProtocolApplication protocolApplication;
	private SeparationResult separationResult;
	private Aliquotage aliquotage;
	private Centrifugation centrifugation;
	private LiquidChromatography liquidChromatography;
	private GelMigration gelMigration;
	private ChemicalSeparation chemicalSeparation;

	public Separation() {
	}

	public Separation(ProtocolApplication protocolApplication, SeparationResult separationResult) {
		this.protocolApplication = protocolApplication;
		this.separationResult = separationResult;
	}

	public Separation(ProtocolApplication protocolApplication, SeparationResult separationResult, Aliquotage aliquotage,
			Centrifugation centrifugation, LiquidChromatography liquidChromatography, GelMigration gelMigration,
			ChemicalSeparation chemicalSeparation) {
		this.protocolApplication = protocolApplication;
		this.separationResult = separationResult;
		this.aliquotage = aliquotage;
		this.centrifugation = centrifugation;
		this.liquidChromatography = liquidChromatography;
		this.gelMigration = gelMigration;
		this.chemicalSeparation = chemicalSeparation;
	}

	@GenericGenerator(name = "org.o7planning.generateentities.SeparationIdGenerator", strategy = "foreign", parameters = @Parameter(name = "property", value = "protocolApplication"))
	@Id
	@GeneratedValue(generator = "org.o7planning.generateentities.SeparationIdGenerator")

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public ProtocolApplication getProtocolApplication() {
		return this.protocolApplication;
	}

	public void setProtocolApplication(ProtocolApplication protocolApplication) {
		this.protocolApplication = protocolApplication;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "result", unique = true, nullable = false)
	public SeparationResult getSeparationResult() {
		return this.separationResult;
	}

	public void setSeparationResult(SeparationResult separationResult) {
		this.separationResult = separationResult;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "separation")
	public Aliquotage getAliquotage() {
		return this.aliquotage;
	}

	public void setAliquotage(Aliquotage aliquotage) {
		this.aliquotage = aliquotage;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "separation")
	public Centrifugation getCentrifugation() {
		return this.centrifugation;
	}

	public void setCentrifugation(Centrifugation centrifugation) {
		this.centrifugation = centrifugation;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "separation")
	public LiquidChromatography getLiquidChromatography() {
		return this.liquidChromatography;
	}

	public void setLiquidChromatography(LiquidChromatography liquidChromatography) {
		this.liquidChromatography = liquidChromatography;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "separation")
	public GelMigration getGelMigration() {
		return this.gelMigration;
	}

	public void setGelMigration(GelMigration gelMigration) {
		this.gelMigration = gelMigration;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "separation")
	public ChemicalSeparation getChemicalSeparation() {
		return this.chemicalSeparation;
	}

	public void setChemicalSeparation(ChemicalSeparation chemicalSeparation) {
		this.chemicalSeparation = chemicalSeparation;
	}

}
