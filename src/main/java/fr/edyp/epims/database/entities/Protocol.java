package fr.edyp.epims.database.entities;
// Generated 10 mai 2021 ï¿½ 11:47:01 by Hibernate Tools 5.2.12.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

/**
 * Protocol generated by hbm2java
 */
@Entity
@Table(name = "protocol", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "title"))
public class Protocol implements java.io.Serializable {

	private int id;
	private Integer version;
	private Reference reference;
	private String title;
	private String creationDate;
	private Set<ProtocolApplication> protocolApplications = new HashSet<ProtocolApplication>(0);
	private Set<ProtocolStep> protocolStepsForStep = new HashSet<ProtocolStep>(0);
	private Set<Treatments> treatmentses = new HashSet<Treatments>(0);
	private AcquisitionProtocol acquisitionProtocol;
	private Set<ProtocolStep> protocolStepsForDescribedProtocol = new HashSet<ProtocolStep>(0);

	public Protocol() {
	}

	public Protocol(int id, String title) {
		this.id = id;
		this.title = title;
	}

	public Protocol(int id, Reference reference, String title, String creationDate,
			Set<ProtocolApplication> protocolApplications, Set<ProtocolStep> protocolStepsForStep,
			Set<Treatments> treatmentses, AcquisitionProtocol acquisitionProtocol,
			Set<ProtocolStep> protocolStepsForDescribedProtocol) {
		this.id = id;
		this.reference = reference;
		this.title = title;
		this.creationDate = creationDate;
		this.protocolApplications = protocolApplications;
		this.protocolStepsForStep = protocolStepsForStep;
		this.treatmentses = treatmentses;
		this.acquisitionProtocol = acquisitionProtocol;
		this.protocolStepsForDescribedProtocol = protocolStepsForDescribedProtocol;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "reference")
	public Reference getReference() {
		return this.reference;
	}

	public void setReference(Reference reference) {
		this.reference = reference;
	}

	@Column(name = "title", unique = true, nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "creation_date")
	public String getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(String creationDate) {
		this.creationDate = creationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "protocol")
	public Set<ProtocolApplication> getProtocolApplications() {
		return this.protocolApplications;
	}

	public void setProtocolApplications(Set<ProtocolApplication> protocolApplications) {
		this.protocolApplications = protocolApplications;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "protocolByStep")
	public Set<ProtocolStep> getProtocolStepsForStep() {
		return this.protocolStepsForStep;
	}

	public void setProtocolStepsForStep(Set<ProtocolStep> protocolStepsForStep) {
		this.protocolStepsForStep = protocolStepsForStep;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "protocol")
	public Set<Treatments> getTreatmentses() {
		return this.treatmentses;
	}

	public void setTreatmentses(Set<Treatments> treatmentses) {
		this.treatmentses = treatmentses;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "protocol")
	public AcquisitionProtocol getAcquisitionProtocol() {
		return this.acquisitionProtocol;
	}

	public void setAcquisitionProtocol(AcquisitionProtocol acquisitionProtocol) {
		this.acquisitionProtocol = acquisitionProtocol;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "protocolByDescribedProtocol")
	public Set<ProtocolStep> getProtocolStepsForDescribedProtocol() {
		return this.protocolStepsForDescribedProtocol;
	}

	public void setProtocolStepsForDescribedProtocol(Set<ProtocolStep> protocolStepsForDescribedProtocol) {
		this.protocolStepsForDescribedProtocol = protocolStepsForDescribedProtocol;
	}

}
