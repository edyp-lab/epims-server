package fr.edyp.epims.database.entities;
// Generated 10 mai 2021 ï¿½ 11:47:01 by Hibernate Tools 5.2.12.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * SampleFamily generated by hbm2java
 */
@Entity
@Table(name = "sample_family", schema = "public")
public class SampleFamily implements java.io.Serializable {

	private SampleFamilyId id;
	private ProtocolApplication protocolApplication;
	private Sample sampleBySon;
	private Sample sampleByFather;

	public SampleFamily() {
	}

	public SampleFamily(SampleFamilyId id, Sample sampleBySon, Sample sampleByFather) {
		this.id = id;
		this.sampleBySon = sampleBySon;
		this.sampleByFather = sampleByFather;
	}

	public SampleFamily(SampleFamilyId id, ProtocolApplication protocolApplication, Sample sampleBySon,
			Sample sampleByFather) {
		this.id = id;
		this.protocolApplication = protocolApplication;
		this.sampleBySon = sampleBySon;
		this.sampleByFather = sampleByFather;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "father", column = @Column(name = "father", nullable = false)),
			@AttributeOverride(name = "son", column = @Column(name = "son", nullable = false)) })
	public SampleFamilyId getId() {
		return this.id;
	}

	public void setId(SampleFamilyId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "protocol_application")
	public ProtocolApplication getProtocolApplication() {
		return this.protocolApplication;
	}

	public void setProtocolApplication(ProtocolApplication protocolApplication) {
		this.protocolApplication = protocolApplication;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "son", nullable = false, insertable = false, updatable = false)
	public Sample getSampleBySon() {
		return this.sampleBySon;
	}

	public void setSampleBySon(Sample sampleBySon) {
		this.sampleBySon = sampleBySon;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "father", nullable = false, insertable = false, updatable = false)
	public Sample getSampleByFather() {
		return this.sampleByFather;
	}

	public void setSampleByFather(Sample sampleByFather) {
		this.sampleByFather = sampleByFather;
	}

}
