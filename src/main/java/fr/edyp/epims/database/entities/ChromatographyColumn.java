package fr.edyp.epims.database.entities;
// Generated 10 mai 2021 ï¿½ 11:47:01 by Hibernate Tools 5.2.12.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ChromatographyColumn generated by hbm2java
 */
@Entity
@Table(name = "chromatography_column", schema = "public")
public class ChromatographyColumn implements java.io.Serializable {

	private int id;
	private String manufacturer;
	private String batchNumber;
	private String internalLength;
	private String internalDiameter;
	private Set<LiquidChromatography> liquidChromatographies = new HashSet<LiquidChromatography>(0);

	public ChromatographyColumn() {
	}

	public ChromatographyColumn(int id) {
		this.id = id;
	}

	public ChromatographyColumn(int id, String manufacturer, String batchNumber,
			String internalLength, String internalDiameter,
			Set<LiquidChromatography> liquidChromatographies) {
		this.id = id;
		this.manufacturer = manufacturer;
		this.batchNumber = batchNumber;
		this.internalLength = internalLength;
		this.internalDiameter = internalDiameter;
		this.liquidChromatographies = liquidChromatographies;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "manufacturer")
	public String getManufacturer() {
		return this.manufacturer;
	}

	public void setManufacturer(String manufacturer) {
		this.manufacturer = manufacturer;
	}

	@Column(name = "batch_number")
	public String getBatchNumber() {
		return this.batchNumber;
	}

	public void setBatchNumber(String batchNumber) {
		this.batchNumber = batchNumber;
	}

	@Column(name = "internal_length")
	public String getInternalLength() {
		return this.internalLength;
	}

	public void setInternalLength(String internalLength) {
		this.internalLength = internalLength;
	}

	@Column(name = "internal_diameter")
	public String getInternalDiameter() {
		return this.internalDiameter;
	}

	public void setInternalDiameter(String internalDiameter) {
		this.internalDiameter = internalDiameter;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "chromatographyColumn")
	public Set<LiquidChromatography> getLiquidChromatographies() {
		return this.liquidChromatographies;
	}

	public void setLiquidChromatographies(Set<LiquidChromatography> liquidChromatographies) {
		this.liquidChromatographies = liquidChromatographies;
	}

}
