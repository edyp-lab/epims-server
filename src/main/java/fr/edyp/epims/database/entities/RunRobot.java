package fr.edyp.epims.database.entities;
// Generated 10 mai 2021 ï¿½ 11:47:01 by Hibernate Tools 5.2.12.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * RunRobot generated by hbm2java
 */
@Entity
@Table(name = "run_robot", schema = "public")
public class RunRobot implements java.io.Serializable {

	private int id;
	private Plate plate;
	private ProtocolApplication protocolApplication;
	private Robot robot;

	public RunRobot() {
	}

	public RunRobot(ProtocolApplication protocolApplication) {
		this.protocolApplication = protocolApplication;
	}

	public RunRobot(Plate plate, ProtocolApplication protocolApplication, Robot robot) {
		this.plate = plate;
		this.protocolApplication = protocolApplication;
		this.robot = robot;
	}

	@GenericGenerator(name = "org.o7planning.generateentities.RunRobotIdGenerator", strategy = "foreign", parameters = @Parameter(name = "property", value = "protocolApplication"))
	@Id
	@GeneratedValue(generator = "org.o7planning.generateentities.RunRobotIdGenerator")

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "plate")
	public Plate getPlate() {
		return this.plate;
	}

	public void setPlate(Plate plate) {
		this.plate = plate;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public ProtocolApplication getProtocolApplication() {
		return this.protocolApplication;
	}

	public void setProtocolApplication(ProtocolApplication protocolApplication) {
		this.protocolApplication = protocolApplication;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "robot")
	public Robot getRobot() {
		return this.robot;
	}

	public void setRobot(Robot robot) {
		this.robot = robot;
	}

}
