package fr.edyp.epims.database.entities;
// Generated 10 mai 2021 ï¿½ 11:47:01 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * Support generated by hbm2java
 */
@Entity
@Table(name = "support", schema = "public")
public class Support implements java.io.Serializable {

	private int id;
	private Sample sample;
	private Integer supportSeqRank;
	private Well well;
	private Set<Transfer> transfersForStartSupport = new HashSet<Transfer>(0);
	private Set<Transfer> transfersForEndSupport = new HashSet<Transfer>(0);
	private Tube tube;

	public Support() {
	}

	public Support(int id, Sample sample) {
		this.id = id;
		this.sample = sample;
	}

	public Support(Sample sample, Integer supportSeqRank, Well well, Set<Transfer> transfersForStartSupport,
			Set<Transfer> transfersForEndSupport, Tube tube) {
		this.sample = sample;
		this.supportSeqRank = supportSeqRank;
		this.well = well;
		this.transfersForStartSupport = transfersForStartSupport;
		this.transfersForEndSupport = transfersForEndSupport;
		this.tube = tube;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator = "support_generator")
	@SequenceGenerator(name = "support_generator", sequenceName = "support_id_seq", allocationSize = 1)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sample", nullable = false)
	public Sample getSample() {
		return this.sample;
	}

	public void setSample(Sample sample) {
		this.sample = sample;
	}

	@Column(name = "support_seq_rank")
	public Integer getSupportSeqRank() {
		return this.supportSeqRank;
	}

	public void setSupportSeqRank(Integer supportSeqRank) {
		this.supportSeqRank = supportSeqRank;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "support")
	public Well getWell() {
		return this.well;
	}

	public void setWell(Well well) {
		this.well = well;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "supportByStartSupport")
	public Set<Transfer> getTransfersForStartSupport() {
		return this.transfersForStartSupport;
	}

	public void setTransfersForStartSupport(Set<Transfer> transfersForStartSupport) {
		this.transfersForStartSupport = transfersForStartSupport;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "supportByEndSupport")
	public Set<Transfer> getTransfersForEndSupport() {
		return this.transfersForEndSupport;
	}

	public void setTransfersForEndSupport(Set<Transfer> transfersForEndSupport) {
		this.transfersForEndSupport = transfersForEndSupport;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "support")
	public Tube getTube() {
		return this.tube;
	}

	public void setTube(Tube tube) {
		this.tube = tube;
	}

}
