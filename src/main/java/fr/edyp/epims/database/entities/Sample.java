package fr.edyp.epims.database.entities;
// Generated 10 mai 2021 ï¿½ 11:47:01 by Hibernate Tools 5.2.12.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Sample generated by hbm2java
 */
@Entity
@Table(name = "sample", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "treatments"))
public class Sample implements java.io.Serializable {

	private String name;
	private Actor actor;
	private BiologicOrigin biologicOrigin;
	private Study study;
	private Treatments treatments;
	private String description;
	private Float volume;
	private String status;
	private Float quantity;
	private String originalName;
	private Boolean radioactivity;
	private Boolean toxicity;
	private Date creationDate;
	private Set<SampleFamily> sampleFamiliesForSon = new HashSet<SampleFamily>(0);
	private Set<SampleFamily> sampleFamiliesForFather = new HashSet<SampleFamily>(0);
	private Set<RobotPlanning> robotPlannings = new HashSet<RobotPlanning>(0);
	private Set<Pool> pools = new HashSet<Pool>(0);
	private Set<Support> supports = new HashSet<Support>(0);
	private Set<MassPlanning> massPlannings = new HashSet<MassPlanning>(0);
	private Set<SampleLocator> sampleLocators = new HashSet<SampleLocator>(0);

	/**
	 * Valid value for status property. Specify the sample
	 * is completely comsumed
	 */
	public static final String CONSUMED_STATUS_VALUE = "Consumed";

	/**
	 * Valid value for status property. Specify the sample
	 * is still available
	 */
	public static final String AVAILABLE_STATUS_VALUE = "Available";


	public Sample() {
	}

	public Sample(String name, Study study, String status) {
		this.name = name;
		this.study = study;
		this.status = status;
	}

	public Sample(String name, Actor actor, BiologicOrigin biologicOrigin, Study study, Treatments treatments,
			String description, Float volume, String status, Float quantity,
			String originalName, Boolean radioactivity, Boolean toxicity, Date creationDate,
			Set<SampleFamily> sampleFamiliesForSon, Set<SampleFamily> sampleFamiliesForFather,
			Set<RobotPlanning> robotPlannings, Set<Pool> pools, Set<Support> supports, Set<MassPlanning> massPlannings,
			Set<SampleLocator> sampleLocators) {
		this.name = name;
		this.actor = actor;
		this.biologicOrigin = biologicOrigin;
		this.study = study;
		this.treatments = treatments;
		this.description = description;
		this.volume = volume;
		this.status = status;
		this.quantity = quantity;
		this.originalName = originalName;
		this.radioactivity = radioactivity;
		this.toxicity = toxicity;
		this.creationDate = creationDate;
		this.sampleFamiliesForSon = sampleFamiliesForSon;
		this.sampleFamiliesForFather = sampleFamiliesForFather;
		this.robotPlannings = robotPlannings;
		this.pools = pools;
		this.supports = supports;
		this.massPlannings = massPlannings;
		this.sampleLocators = sampleLocators;
	}

	@Id
	@Column(name = "name", unique = true, nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creation_actor")
	public Actor getActor() {
		return this.actor;
	}

	public void setActor(Actor actor) {
		this.actor = actor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "biologic_origin")
	public BiologicOrigin getBiologicOrigin() {
		return this.biologicOrigin;
	}

	public void setBiologicOrigin(BiologicOrigin biologicOrigin) {
		this.biologicOrigin = biologicOrigin;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "study", nullable = false)
	public Study getStudy() {
		return this.study;
	}

	public void setStudy(Study study) {
		this.study = study;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "treatments", unique = true)
	public Treatments getTreatments() {
		return this.treatments;
	}

	public void setTreatments(Treatments treatments) {
		this.treatments = treatments;
	}


	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "volume")
	public Float getVolume() {
		return this.volume;
	}

	public void setVolume(Float volume) {
		this.volume = volume;
	}

	@Column(name = "status", nullable = false)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "quantity")
	public Float getQuantity() {
		return this.quantity;
	}

	public void setQuantity(Float quantity) {
		this.quantity = quantity;
	}

	@Column(name = "original_name")
	public String getOriginalName() {
		return this.originalName;
	}

	public void setOriginalName(String originalName) {
		this.originalName = originalName;
	}

	@Column(name = "radioactivity")
	public Boolean getRadioactivity() {
		return this.radioactivity;
	}

	public void setRadioactivity(Boolean radioactivity) {
		this.radioactivity = radioactivity;
	}

	@Column(name = "toxicity")
	public Boolean getToxicity() {
		return this.toxicity;
	}

	public void setToxicity(Boolean toxicity) {
		this.toxicity = toxicity;
	}

	@Column(name = "creation_date")
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sampleBySon")
	public Set<SampleFamily> getSampleFamiliesForSon() {
		return this.sampleFamiliesForSon;
	}

	public void setSampleFamiliesForSon(Set<SampleFamily> sampleFamiliesForSon) {
		this.sampleFamiliesForSon = sampleFamiliesForSon;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sampleByFather")
	public Set<SampleFamily> getSampleFamiliesForFather() {
		return this.sampleFamiliesForFather;
	}

	public void setSampleFamiliesForFather(Set<SampleFamily> sampleFamiliesForFather) {
		this.sampleFamiliesForFather = sampleFamiliesForFather;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sample")
	public Set<RobotPlanning> getRobotPlannings() {
		return this.robotPlannings;
	}

	public void setRobotPlannings(Set<RobotPlanning> robotPlannings) {
		this.robotPlannings = robotPlannings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sample")
	public Set<Pool> getPools() {
		return this.pools;
	}

	public void setPools(Set<Pool> pools) {
		this.pools = pools;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sample")
	public Set<Support> getSupports() {
		return this.supports;
	}

	public void setSupports(Set<Support> supports) {
		this.supports = supports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sample")
	public Set<MassPlanning> getMassPlannings() {
		return this.massPlannings;
	}

	public void setMassPlannings(Set<MassPlanning> massPlannings) {
		this.massPlannings = massPlannings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sample")
	public Set<SampleLocator> getSampleLocators() {
		return this.sampleLocators;
	}

	public void setSampleLocators(Set<SampleLocator> sampleLocators) {
		this.sampleLocators = sampleLocators;
	}

}
